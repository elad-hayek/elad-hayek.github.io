{"version":3,"sources":["constants/reducer-actions.js","reducers/favoritesReducer.js","reducers/homeReducer.js","reducers/currentWeatherReducer.js","reducers/forcastReducer.js","reducers/locationsReducer.js","constants/general.js","reducers/appReducer.js","reducers.js","configureStore.js","constants/navigation.js","actionCreators/homeActions.js","constants/api.js","actionCreators/generalFunctions.js","actionCreators/forcastActions.js","components/Favorites/LocationCard/LocationCard.jsx","components/Favorites/Favorites.jsx","actionCreators/locationsActions.js","actionCreators/currentWeatherActions.js","components/Home/SearchBar/SearchBar.jsx","components/Home/MIniForcastCard/MiniForcastCard.jsx","components/Home/InformarionCard/InformationCrad.jsx","actionCreators/favoritesActions.js","components/ErrorToast/ErrorToast.jsx","components/Home/Home.jsx","actionCreators/appActions.js","components/NavBar/NavBar.jsx","components/App/App.jsx","index.js"],"names":["ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","UPADTAE_MAIN_LOCATION_TO_VIEW","FETCH_CURRENT_WEATHER_REQUEST","FETCH_CURRENT_WEATHER_SUCCESS","FETCH_CURRENT_WEATHER_FAILURE","FETCH_FORCAST_REQUEST","FETCH_FORCAST_SUCCESS","FETCH_FORCAST_FAILURE","FETCH_LOCATIONS_REQUEST","FETCH_LOCATIONS_SUCCESS","FETCH_LOCATIONS_FAILURE","ADD_TO_ERROR_STACK","REMOVE_FROM_ERROR_STACK","CHANGE_APP_THEME","initialValues","favorites","favoritesReducer","state","type","payload","filter","location","id","locationToView","errorStack","homeReducer","concat","error","loading","data","currentWeatherReducer","forcastReducer","locationsReducer","weekday","themes","theme","appReducer","createRootReducer","history","combineReducers","router","connectRouter","app","home","currentWeather","forcast","locations","createBrowserHistory","preloadedState","routes","updateMainLocationToView","addToErrorStack","errorObject","apiKey","forcastUrl","defaultLocation","objectValidation","object","validationType","Object","keys","length","undefined","fetchForcastRequest","fetchForcastSuccess","fetchForcastFailure","fetchForcast","key","metric","dispatch","a","fetch","then","response","status","text","Error","err","json","forcasts","DailyForecasts","catch","Math","random","name","message","LocationCard","useDispatch","useSelector","useHistory","className","Card","onClick","push","bg","variant","Header","as","Body","Title","WeatherText","Text","Temperature","Metric","Value","Favorites","map","fetchLocationsSuccess","fetchCurrentWeatherSuccess","fetchCurrentWeather","SearchBar","currentLocation","useState","selectedCity","setSelectedCity","useEffect","Key","LocalizedName","Container","isLoading","labelKey","option","Country","onSearch","query","searchString","options","onChange","selected","placeholder","icon","faSearch","size","flip","style","position","top","right","getDayByDateTime","dateTime","date","Date","getDay","MiniForcastCard","Subtitle","Day","IconPhrase","Minimum","Maximum","InformationCard","isFavorite","setIsFavorite","forEach","iconNumber","Spinner","animation","role","alt","src","WeatherIcon","replace","OverlayTrigger","placement","overlay","Tooltip","Provider","value","day","ErrorToast","Toast","onClose","removeFromErrorStack","delay","autohide","Home","ToastContainer","changeAppTheme","NavBar","themeSwitchRef","useRef","Navbar","Col","Brand","Link","to","faCloudSun","marginRight","current","checked","faSun","faMoon","color","Form","Check","ref","Nav","App","document","body","exact","path","component","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"+aACaA,EAAmB,mBACnBC,EAAwB,wBAGxBC,EAAgC,+BAGhCC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAAgC,gCAGhCC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAA0B,0BAG1BC,EAAqB,qBACrBC,EAA0B,0BAG1BC,EAAmB,mBCrB1BC,EAAgB,CAClBC,UAAW,IAcAC,EAXiB,WAA6C,IAA5CC,EAA2C,uDAAnCH,EAAmC,yCAAnBI,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC3D,OAAOD,GACH,KAAKnB,EACD,OAAO,2BAAIkB,GAAX,IAAkBF,UAAU,GAAD,mBAAKE,EAAMF,WAAX,CAAsBI,MACrD,KAAKnB,EACD,OAAO,2BAAIiB,GAAX,IAAkBF,UAAUE,EAAMF,UAAUK,QAAO,SAAAC,GAAQ,OAAEA,EAASC,KAAOH,OACjF,QACI,OAAOF,ICVbH,EAAgB,CAClBS,eAAgB,GAChBC,WAAY,IAgBDC,EAbY,WAA6C,IAA5CR,EAA2C,uDAAnCH,EAAmC,yCAAnBI,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACtD,OAAOD,GACH,KAAKjB,EACD,OAAO,2BAAIgB,GAAX,IAAkBM,eAAgBJ,IACtC,KAAKR,EACD,OAAO,2BAAIM,GAAX,IAAkBO,WAAYP,EAAMO,WAAWE,OAAOP,KAC1D,KAAKP,EACD,OAAO,2BAAIK,GAAX,IAAkBO,WAAYP,EAAMO,WAAWJ,QAAO,SAAAO,GAAK,OAAEA,EAAML,KAAOH,OAC9E,QACI,OAAOF,ICdbH,EAAgB,CAClBc,SAAS,EACTC,KAAM,GACNF,MAAO,IAgBIG,EAbsB,WAA6C,IAA5Cb,EAA2C,uDAAnCH,EAAmC,yCAAnBI,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAChE,OAAOD,GACH,KAAKhB,EACD,OAAO,2BAAIe,GAAX,IAAkBW,SAAS,IAC/B,KAAKzB,EACD,OAAO,2BAAIc,GAAX,IAAkBW,SAAS,EAAOC,KAAMV,EAASQ,MAAM,KAC3D,KAAKvB,EACD,OAAO,2BAAIa,GAAX,IAAkBW,SAAQ,EAAOD,MAAOR,IAC5C,QACI,OAAOF,ICfbH,EAAgB,CAClBc,SAAS,EACTC,KAAM,GACNF,MAAO,IAgBII,EAbe,WAA6C,IAA5Cd,EAA2C,uDAAnCH,EAAmC,yCAAnBI,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACzD,OAAOD,GACH,KAAKb,EACD,OAAO,2BAAIY,GAAX,IAAkBW,SAAS,IAC/B,KAAKtB,EACD,OAAO,2BAAIW,GAAX,IAAkBW,SAAS,EAAOC,KAAMV,EAASQ,MAAM,KAC3D,KAAKpB,EACD,OAAO,2BAAIU,GAAX,IAAkBW,SAAQ,EAAOD,MAAOR,IAC5C,QACI,OAAOF,ICfbH,EAAgB,CAClBc,SAAS,EACTC,KAAM,GACNF,MAAO,IAgBIK,EAbiB,WAA6C,IAA5Cf,EAA2C,uDAAnCH,EAAmC,yCAAnBI,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC3D,OAAOD,GACH,KAAKV,EACD,OAAO,2BAAIS,GAAX,IAAkBW,SAAS,IAC/B,KAAKnB,EACD,OAAO,2BAAIQ,GAAX,IAAkBW,SAAS,EAAOC,KAAMV,EAASQ,MAAM,KAC3D,KAAKjB,EACD,OAAO,2BAAIO,GAAX,IAAkBW,SAAQ,EAAOD,MAAOR,IAC5C,QACI,OAAOF,ICtBNgB,EAAU,CACvB,SACA,SACA,UACA,YACA,WACA,SACA,YAGaC,EACF,QADEA,EAEH,OCNJpB,EAAgB,CAClBqB,MAAOD,GAaIE,EAVI,WAA0C,IAAzCnB,EAAwC,uDAAlCH,EAAkC,yCAAlBI,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,QAC5C,OAAOD,IACEL,EACM,2BAAII,GAAX,IAAkBkB,MAAOhB,IAElBF,GCGJoB,EATW,SAACC,GAAD,OAAYC,0BAAgB,CAClDC,OAAQC,YAAcH,GACtBI,IAAKN,EACLO,KAAMlB,EACNV,UAAWC,EACX4B,eAAgBd,EAChBe,QAASd,EACTe,UAAWd,KCTFM,EAAUS,c,IAEgBC,E,QCT1BC,EACH,IADGA,EAEE,a,kBCKFC,EAA2B,SAAC7B,GACrC,MAAO,CAAEH,KAAMjB,EAA+BkB,QAASE,IAG9C8B,GAAkB,SAACC,GAC5B,MAAO,CAAElC,KAAMP,EAAoBQ,QAASiC,ICXnCC,I,OAAS,oCAGTC,GAAa,+DAEbC,GAAwB,SAAxBA,GAAuC,WCFvCC,GAAmB,SAACC,GAAiC,IAAzBC,EAAwB,uDAAT,KACpD,OAAOA,GACH,IAAK,KACD,OAAuC,IAA/BC,OAAOC,KAAKH,GAAQI,aACjBC,IAAXL,GAAmC,OAAXA,EAC5B,IAAK,MACD,OAAuC,IAA/BE,OAAOC,KAAKH,GAAQI,aACjBC,IAAXL,GAAmC,OAAXA,EAC5B,QACI,OAAO,I,6BCJbM,GAAsB,WACxB,MAAO,CAAE7C,KAAMb,IAGb2D,GAAsB,SAACnC,GACzB,MAAO,CAAEX,KAAMZ,EAAuBa,QAASU,IAG7CoC,GAAsB,SAACtC,GACzB,MAAO,CAAET,KAAMX,EAAuBY,QAASQ,IAGtCuC,GAAe,SAACC,GAAsB,IAAjBC,EAAgB,wDAC9C,gDAAO,WAAOC,GAAP,UAAAC,EAAA,6DACHD,EAASN,MADN,SAEGQ,MAAM,GAAD,OAAIjB,IAAJ,OAAiBa,EAAjB,mBAA+Bd,GAA/B,mBAAgDe,IAC1DI,MAAK,SAAAC,GACF,GAAuB,MAApBA,EAASC,OACR,IACI,OAAOD,EAASE,OAAOH,MAAK,SAAAG,GAAQ,MAAM,IAAIC,MAAMD,MAExD,MAAOE,GACH,MAAMA,EAGd,OAAOJ,EAASK,UAEnBN,MAAK,SAAA3C,GACFwC,EAASL,GAAoB,CAAC1C,GAAG6C,EAAKY,SAAUlD,EAAKmD,qBAExDC,OAAM,SAAAJ,GACHR,EAASlB,GAAgB,CAAC7B,GAAI4D,KAAKC,SAAUC,KAAM,iBAAkBzD,MAAMkD,EAAIQ,WAC/EhB,EAASJ,GAAoBY,EAAIQ,aAnBlC,2CAAP,uD,QCsBWC,GAjCM,SAAC,GAAe,IAAdjE,EAAa,EAAbA,SACbgD,EAAWkB,cACX1C,EAAU2C,aAAY,SAAAvE,GAAK,OAAEA,EAAM4B,WACnCV,EAAQqD,aAAY,SAAAvE,GAAK,OAAEA,EAAMyB,IAAIP,SACrCG,EAAUmD,cAchB,OACI,sBAAKC,UAAS,wBAAmBvD,GAAjC,SACI,gBAACwD,EAAA,EAAD,CAAMC,QAdM,WAChBvB,EAASnB,EAAyB7B,KAG/BmC,GAAiBX,EAAQhB,OAASgB,EAAQhB,KAAKP,KAAOD,EAASC,KAC9D+C,EAASH,GAAa7C,EAASC,IAAI,IAGvCgB,EAAQuD,KAAK5C,IAMoB6C,GAAI3D,EAAO4D,QAAS5D,EAAjD,UACI,eAACwD,EAAA,EAAKK,OAAN,CAAaC,GAAG,KAAhB,SAAsB5E,EAAS+D,OAC/B,gBAACO,EAAA,EAAKO,KAAN,WACI,eAACP,EAAA,EAAKQ,MAAN,UAAa9E,EAASA,SAAS+E,cAC/B,gBAACT,EAAA,EAAKU,KAAN,WACKhF,EAASA,SAASiF,YAAYC,OAAOC,MAD1C,sBCFLC,GA3BG,WACd,IAAM1F,EAAYyE,aAAY,SAAAvE,GAAK,OAAEA,EAAMF,UAAUA,aAKrD,OACI,sBAAK2E,UAAU,sBAAf,SAC2B,IAArB3E,EAAU8C,OACR,sBAAK6B,UAAU,4BAAf,SAEQ3E,EAAU2F,KAAI,SAAArF,GACV,OACI,eAAC,GAAD,CAAcA,SAAUA,GAAe6D,KAAKC,eAM5D,sBAAKO,UAAU,oBAAf,wF,sCCbViB,GAAwB,SAAC9E,GAC3B,MAAO,CAAEX,KAAMT,EAAyBU,QAASU,ICA/C+E,GAA6B,SAAC/E,GAChC,MAAO,CAAEX,KAAMf,EAA+BgB,QAASU,IAO9CgF,GAAsB,SAAC1C,EAAKiB,GACrC,gDAAO,WAAOf,GAAP,UAAAC,EAAA,6DACHD,EAbG,CAAEnD,KAAMhB,IAYR,SAEGqE,MAAM,GAAD,ONrBc,6DMqBd,OAAwBJ,EAAxB,mBAAsCd,KAChDmB,MAAK,SAAAC,GACF,GAAuB,MAApBA,EAASC,OACR,IACI,OAAOD,EAASE,OAAOH,MAAK,SAAAG,GAAQ,MAAM,IAAIC,MAAMD,MAExD,MAAOE,GACH,MAAMA,EAGd,OAAOJ,EAASK,UAEnBN,MAAK,SAAA3C,GACFwC,EAASuC,GAA2B/E,IACpCwC,EAASnB,EAAyB,CAAC5B,GAAG6C,EAAKiB,KAAMA,EAAM/D,SAAUQ,EAAK,SAEzEoD,OAAM,SAAAJ,GAvBoB,IAAClD,EAwBxB0C,EAASlB,GAAgB,CAAC7B,GAAG4D,KAAKC,SAAUC,KAAK,yBAA0BzD,MAAOkD,EAAIQ,WACtFhB,GAzBwB1C,EAyBYkD,EAAIQ,QAxBzC,CAAEnE,KAAMd,EAA+Be,QAASQ,QAIhD,2CAAP,uD,kBCiCWmF,GA1CG,WACd,IAAMhE,EAAY0C,aAAY,SAAAvE,GAAK,OAAEA,EAAM6B,aACrCiE,EAAkBvB,aAAY,SAAAvE,GAAK,OAAEA,EAAM0B,KAAKpB,kBAChDY,EAAQqD,aAAY,SAAAvE,GAAK,OAAEA,EAAMyB,IAAIP,SACrCkC,EAAWkB,cACjB,EAAwCyB,mBAAS,IAAjD,oBAAOC,EAAP,KAAqBC,EAArB,KAYA,OAVAC,qBAAU,WACqB,IAAxBF,EAAapD,SACTL,GAAiBuD,IAAoBA,EAAgBzF,KAAO2F,EAAa,GAAGG,OAC3E/C,EAASwC,GAAoBI,EAAa,GAAGG,IAAKH,EAAa,GAAGI,gBAClEhD,EAASH,GAAa+C,EAAa,GAAGG,KAAK,OAGrD,CAACH,IAIC,sBAAKvB,UAAU,2BAAf,SACI,gBAAC4B,GAAA,EAAD,WACMxE,EAAUnB,OAAS,wBAAO+D,UAAU,uBAAjB,SAA0C5C,EAAUnB,QACzE,uBAAK+D,UAAU,4BAAf,UACI,eAAC,KAAD,CACIpE,GAAG,0BACHoE,UAAWvD,EACXoF,UAAWzE,EAAUlB,QACrB4F,SAAU,SAAAC,GAAM,gBAAOA,EAAOC,QAAQL,cAAtB,cAAyCI,EAAOJ,gBAChEM,SAAU,SAACC,GFpBL,IAACC,EEqBHxD,GFrBGwD,EEqBqBD,EFpBhD,yCAAO,WAAOvD,GAAP,UAAAC,EAAA,6DACHD,EAbG,CAAEnD,KAAMV,IAYR,SAEG+D,MAAM,GAAD,OLlBY,uEKkBZ,mBAA8BlB,GAA9B,cAA0CwE,IACpDrD,MAAK,SAAAC,GACF,GAAuB,MAApBA,EAASC,OACR,IACI,OAAOD,EAASE,OAAOH,MAAK,SAAAG,GAAQ,MAAM,IAAIC,MAAMD,MAExD,MAAOE,GACH,MAAMA,EAGd,OAAOJ,EAASK,UAEnBN,MAAK,SAAA3C,GACFwC,EAASsC,GAAsB9E,OAElCoD,OAAM,SAAAJ,GAtBe,IAAClD,EAuBnB0C,GAvBmB1C,EAuBYkD,EAAIQ,QAtBpC,CAAEnE,KAAMR,EAAyBS,QAASQ,QAI1C,2CAAP,yDEsBoBmG,QAAShF,EAAUjB,KACnBkG,SAAU,SAACC,GAAYd,EAAgBc,IACvCA,SAAUf,EACVgB,YAAY,sBAEpB,eAAC,KAAD,CAAiBC,KAAMC,KAAUC,KAAK,KAAMC,KAAK,aAAaC,MAAO,CAACC,SAAS,WAAYC,IAAI,MAAOC,MAAM,iB,0BC3CtHC,I,OAAmB,SAACC,GACtB,IAAMC,EAAO,IAAIC,KAAKF,GACtB,OAAO1G,EAAQ2G,EAAKE,YAuBTC,GApBS,SAAC,GAAc,IAAblG,EAAY,EAAZA,QAChBV,EAAQqD,aAAY,SAAAvE,GAAK,OAAEA,EAAMyB,IAAIP,SAE3C,OACI,sBAAKuD,UAAU,oBAAf,SACI,eAACC,EAAA,EAAD,CAAMG,GAAI3D,EAAO4D,QAAS5D,EAA1B,SACI,gBAACwD,EAAA,EAAKO,KAAN,WACI,eAACP,EAAA,EAAKQ,MAAN,UAAauC,GAAiB7F,EAAQgG,QACtC,eAAClD,EAAA,EAAKqD,SAAN,CAAetD,UAAU,kBAAzB,SAA4C7C,EAAQoG,IAAIC,aACxD,gBAACvD,EAAA,EAAKU,KAAN,WACKxD,EAAQyD,YAAY6C,QAAQ3C,MADjC,YAGS3D,EAAQyD,YAAY8C,QAAQ5C,MAHrC,qB,sCCsGL6C,GA9GS,WACpB,IAAMtI,EAAYyE,aAAY,SAAAvE,GAAK,OAAEA,EAAMF,UAAUA,aAC/CgG,EAAkBvB,aAAY,SAAAvE,GAAK,OAAEA,EAAM0B,KAAKpB,kBAChDqB,EAAiB4C,aAAY,SAAAvE,GAAK,OAAEA,EAAM2B,kBAC1CC,EAAU2C,aAAY,SAAAvE,GAAK,OAAEA,EAAM4B,WACnCwB,EAAWkB,cACjB,EAAoCyB,oBAAS,GAA7C,oBAAOsC,EAAP,KAAmBC,EAAnB,KAEApC,qBAAU,WAMN,OALApG,EAAUyI,SAAQ,SAAAnI,GACXA,EAASC,KAAOyF,EAAgBzF,IAC/BiI,GAAc,MAGf,WAAKA,GAAc,MAC5B,CAACxC,IAEH,IRVoC0C,EQoBpC,OACI,sBAAK/D,UAAU,6BAAf,SACI,uBAAKA,UAAU,mBAAf,UAEQ9C,EAAehB,QACf,sBAAK8D,UAAU,0BAAf,SACI,eAACgE,GAAA,EAAD,CAAShE,UAAU,0BAA0BiE,UAAU,SAASC,KAAK,SAArE,SACI,uBAAMlE,UAAU,kBAAhB,4BAIN9C,EAAejB,MACjB,sBAAK+D,UAAU,0BAAf,SACI,+BAAM9C,EAAejB,UAGxB6B,GAAiBuD,GAClB,yBAEA,qCACA,uBAAKrB,UAAU,0BAAf,UACI,sBAAKA,UAAU,yBAAf,SACI,uBAAKA,UAAU,kCAAf,UACI,+BAAMqB,EAAgB3B,OACtB,iCAAM2B,EAAgB1F,SAASiF,YAAYC,OAAOC,MAAlD,kBAGR,uBAAKd,UAAU,6BAAf,UACI,sBAAKA,UAAU,yBAAf,SACI,sBAAKmE,IAAI,GAAGC,KRjDJL,EQiDiC1C,EAAgB1F,SAAS0I,YRhD3FN,EAAW,KACVA,EAAU,WAAOA,IDlBO,iECmBJO,QAAQ,KAAMP,QQgDd,uBAAM/D,UAAU,uBAAhB,SAAwCqB,EAAgB1F,SAAS+E,iBAErE,eAAC6D,GAAA,EAAD,CACIC,UAAU,MACVC,QACA,eAACC,GAAA,EAAD,UACKd,EAAY,wBAAyB,qBAJ9C,SAQI,sBAAK5D,UAAU,6BAAf,SACQ,gBAAC,KAAY2E,SAAb,CAAsBC,MAAO,CAAC5E,UAAW,kBAAzC,WACM4D,GAAc,eAAC,KAAD,CAAe1D,QArDtC,WACzBvB,ECtBG,CAAEnD,KAAMnB,EAAkBoB,QDsBL4F,IACxBwC,GAAc,MAoDmBD,GAAe,eAAC,KAAD,CAAQ1D,QAjD1B,WCvBH,IAACtE,EDwB5B+C,GCxB4B/C,EDwBCyF,EAAgBzF,GCvB1C,CAAEJ,KAAMlB,EAAuBmB,QAASG,KDwB3CiI,GAAc,kBA2DN,sBAAK7D,UAAU,6BAAf,SACI,sBAAKA,UAAU,+BAAf,SAEQ7C,EAAQjB,QACR,eAAC8H,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACI,uBAAMlE,UAAU,kBAAhB,0BAGH7C,EAAQlB,MACT,+BAAMkB,EAAQlB,QAGd6B,GAAiBX,EAAQhB,KAAM,QAC9BgB,EAAQhB,KAAKkD,SAAS2B,KAAI,SAAA6D,GACvB,OACI,eAAC,GAAD,CAAiB1H,QAAS0H,GAAUrF,KAAKC,uB,UE3F9DqF,GAbI,SAAC,GAAsB,IAArBlJ,EAAoB,EAApBA,GAAI8D,EAAgB,EAAhBA,KAAMzD,EAAU,EAAVA,MACrB0C,EAAWkB,cAEjB,OACI,gBAACkF,GAAA,EAAD,CAAOC,QAAS,WAAKrG,EZMO,SAAC/C,GACjC,MAAO,CAAEJ,KAAMN,EAAyBO,QAASG,GYPfqJ,CAAqBrJ,KAAOsJ,MAAO,IAAMC,UAAQ,EAAC/E,GAAG,SAAnF,UACI,eAAC2E,GAAA,EAAMzE,OAAP,UACA,yBAAQN,UAAU,UAAlB,SAA6BN,MAE7B,eAACqF,GAAA,EAAMvE,KAAP,CAAaR,UAAU,aAAvB,SAAqC/D,Q,UCmClCmJ,GAnCF,WACT,IAAMzG,EAAWkB,cACX3C,EAAiB4C,aAAY,SAAAvE,GAAK,OAAEA,EAAM2B,kBAC1CC,EAAU2C,aAAY,SAAAvE,GAAK,OAAEA,EAAM4B,WACnCrB,EAAagE,aAAY,SAAAvE,GAAK,OAAEA,EAAM0B,KAAKnB,cAUjD,OARA2F,qBAAU,WAC4B,IAA/BvE,EAAef,KAAKgC,QACnBQ,EAASwC,GAAoBtD,GAAqBA,KAElDC,GAAiBX,EAAQhB,OACzBwC,EAASH,GAAaX,IAAqB,MACjD,IAGE,iCACI,eAACwH,GAAA,EAAD,CAAiBxC,SAAS,aAA1B,SAEY/G,EAAWkF,KAAI,SAAA/E,GACX,OACI,eAAC,GAAD,CAA2BL,GAAIK,EAAML,GAAI8D,KAAMzD,EAAMyD,KAAMzD,MAAOA,EAAMA,OAAvDA,EAAML,SAK3C,uBAAKoE,UAAU,4BAAf,UACI,eAAC,GAAD,IACA,sBAAKA,UAAU,6BAAf,SACI,eAAC,GAAD,a,iDCpCPsF,I,OAAiB,SAAC7I,GAC3B,MAAO,CAAEjB,KAAML,EAAkBM,QAASgB,KC2C/B8I,GArCA,WACX,IAAM9I,EAAQqD,aAAY,SAAAvE,GAAK,OAAEA,EAAMyB,IAAIP,SACrCkC,EAAWkB,cACX2F,EAAiBC,kBAAO,GAS9B,OACI,eAACC,GAAA,EAAD,CAAQ9J,GAAG,SAASwE,GAAI3D,EAAO4D,QAAS5D,EAAxC,SACI,gBAACmF,GAAA,EAAD,WACI,eAAC+D,GAAA,EAAD,UACA,gBAACD,GAAA,EAAOE,MAAR,CAAcrF,GAAIsF,KAAMC,GAAIvI,EAA5B,UACI,eAAC,KAAD,CAAiBiF,KAAMuD,KAAYrD,KAAK,KAAKE,MAAO,CAACoD,YAAa,MADtE,oBAMER,EAAeS,QAAQC,SACzB,eAAC,KAAD,CAAiB1D,KAAM2D,KAAOzD,KAAK,KAAKE,MAAO,CAACoD,YAAa,MAC5DR,EAAeS,QAAQC,SACxB,eAAC,KAAD,CAAiB1D,KAAM4D,KAAQ1D,KAAK,KAAKE,MAAO,CAACoD,YAAa,GAAIK,MAAO,UACzE,eAACC,GAAA,EAAKC,MAAN,CAAYC,IAAKhB,EAAgBxF,UAAU,eAAexE,KAAK,SAAS6G,SArB1D,WACnBmD,EAAeS,QAAQC,QACtBvH,EAAS2G,GAAe9I,IAExBmC,EAAS2G,GAAe9I,OAmBpB,gBAACiK,GAAA,EAAD,WACI,eAACA,GAAA,EAAIZ,KAAL,CAAUtF,GAAIsF,KAAMC,GAAIvI,EAAxB,kBACA,eAACkJ,GAAA,EAAIZ,KAAL,CAAUtF,GAAIsF,KAAMC,GAAIvI,EAAxB,gCCJLmJ,I,OA3BH,WACR,IAAMjK,EAAQqD,aAAY,SAAAvE,GAAK,OAAEA,EAAMyB,IAAIP,SAe3C,OAbAgF,qBAAU,WACN,OAAOhF,GACH,KAAKD,EACDmK,SAASC,KAAK5G,UAAY,YAC1B,MACJ,KAAKxD,EACDmK,SAASC,KAAK5G,UAAY,aAC1B,MACJ,QACI,UAEV,CAACvD,IAGC,uBAAKuD,UAAU,gBAAf,UACI,eAAC,GAAD,IACA,gBAAC,IAAD,WACI,eAAC,IAAD,CAAO6G,OAAK,EAACC,KAAMvJ,EAAawJ,UAAW3B,KAC3C,eAAC,IAAD,CAAO0B,KAAMvJ,EAAkBwJ,UAAWhG,aCrBpDiG,I,OnBDYC,sBACVtK,EAAkBC,GAClBU,EACA4J,8BACIC,0BACIC,YAAiBxK,GACjByK,QmBHhBC,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,eAAC,IAAD,CAAiBpK,QAASA,EAA1B,SACE,eAAC,IAAD,UACE,eAAC,IAAD,CAAOkK,KAAK,IAAIC,UAAWL,aAKnCC,SAASc,eAAe,W","file":"static/js/main.c5e48275.chunk.js","sourcesContent":["// favorites\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\"\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\"\r\n\r\n// home\r\nexport const UPADTAE_MAIN_LOCATION_TO_VIEW = \"UPDATE_MAIN_LOCATION_TO_VIEW\"\r\n\r\n// current weather\r\nexport const FETCH_CURRENT_WEATHER_REQUEST = \"FETCH_CURRENT_WEATHER_REQUEST\"\r\nexport const FETCH_CURRENT_WEATHER_SUCCESS = \"FETCH_CURRENT_WEATHER_SUCCESS\"\r\nexport const FETCH_CURRENT_WEATHER_FAILURE = \"FETCH_CURRENT_WEATHER_FAILURE\"\r\n\r\n// 5 day forcast\r\nexport const FETCH_FORCAST_REQUEST = \"FETCH_FORCAST_REQUEST\"\r\nexport const FETCH_FORCAST_SUCCESS = \"FETCH_FORCAST_SUCCESS\"\r\nexport const FETCH_FORCAST_FAILURE = \"FETCH_FORCAST_FAILURE\"\r\n\r\n// locations\r\nexport const FETCH_LOCATIONS_REQUEST = \"FETCH_LOCATIONS_REQUEST\"\r\nexport const FETCH_LOCATIONS_SUCCESS = \"FETCH_LOCATIONS_SUCCESS\"\r\nexport const FETCH_LOCATIONS_FAILURE = \"FETCH_LOCATIONS_FAILURE\"\r\n\r\n// errors\r\nexport const ADD_TO_ERROR_STACK = \"ADD_TO_ERROR_STACK\"\r\nexport const REMOVE_FROM_ERROR_STACK = \"REMOVE_FROM_ERROR_STACK\"\r\n\r\n// app\r\nexport const CHANGE_APP_THEME = \"CHANGE_APP_THEME\"","import {\r\nADD_TO_FAVORITES,\r\nREMOVE_FROM_FAVORITES\r\n}\r\nfrom '../constants/reducer-actions'\r\n\r\nconst initialValues = {\r\n    favorites: []\r\n}\r\n\r\nexport const favoritesReducer = (state = initialValues, {type, payload}) => {\r\n    switch(type){\r\n        case ADD_TO_FAVORITES:\r\n            return {...state, favorites:[...state.favorites, payload]}\r\n        case REMOVE_FROM_FAVORITES:\r\n            return {...state, favorites:state.favorites.filter(location=>location.id !== payload)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default favoritesReducer","import {\r\n    UPADTAE_MAIN_LOCATION_TO_VIEW,\r\n    ADD_TO_ERROR_STACK,\r\n    REMOVE_FROM_ERROR_STACK\r\n}\r\nfrom '../constants/reducer-actions'\r\n    \r\nconst initialValues = {\r\n    locationToView: {},\r\n    errorStack: []\r\n}\r\n\r\nexport const homeReducer = (state = initialValues, {type, payload}) => {\r\n    switch(type){\r\n        case UPADTAE_MAIN_LOCATION_TO_VIEW:\r\n            return {...state, locationToView: payload}\r\n        case ADD_TO_ERROR_STACK:\r\n            return {...state, errorStack: state.errorStack.concat(payload)}\r\n        case REMOVE_FROM_ERROR_STACK:\r\n            return {...state, errorStack: state.errorStack.filter(error=>error.id !== payload)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default homeReducer","import {\r\n    FETCH_CURRENT_WEATHER_REQUEST,\r\n    FETCH_CURRENT_WEATHER_SUCCESS,\r\n    FETCH_CURRENT_WEATHER_FAILURE\r\n}\r\nfrom '../constants/reducer-actions'\r\n        \r\nconst initialValues = {\r\n    loading: false, \r\n    data: [],\r\n    error: ''\r\n}\r\n        \r\nexport const currentWeatherReducer = (state = initialValues, {type, payload}) => {\r\n    switch(type){\r\n        case FETCH_CURRENT_WEATHER_REQUEST:\r\n            return {...state, loading: true}\r\n        case FETCH_CURRENT_WEATHER_SUCCESS:\r\n            return {...state, loading: false, data: payload, error:''}\r\n        case FETCH_CURRENT_WEATHER_FAILURE:\r\n            return {...state, loading:false, error: payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default currentWeatherReducer","import {\r\n    FETCH_FORCAST_REQUEST,\r\n    FETCH_FORCAST_SUCCESS,\r\n    FETCH_FORCAST_FAILURE\r\n}\r\nfrom '../constants/reducer-actions'\r\n        \r\nconst initialValues = {\r\n    loading: false, \r\n    data: {},\r\n    error: ''\r\n}\r\n        \r\nexport const forcastReducer = (state = initialValues, {type, payload}) => {\r\n    switch(type){\r\n        case FETCH_FORCAST_REQUEST:\r\n            return {...state, loading: true}\r\n        case FETCH_FORCAST_SUCCESS:\r\n            return {...state, loading: false, data: payload, error:''}\r\n        case FETCH_FORCAST_FAILURE:\r\n            return {...state, loading:false, error: payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default forcastReducer","import {\r\n    FETCH_LOCATIONS_REQUEST,\r\n    FETCH_LOCATIONS_SUCCESS,\r\n    FETCH_LOCATIONS_FAILURE\r\n}\r\nfrom '../constants/reducer-actions'\r\n        \r\nconst initialValues = {\r\n    loading: false, \r\n    data: [],\r\n    error: ''\r\n}\r\n        \r\nexport const locationsReducer = (state = initialValues, {type, payload}) => {\r\n    switch(type){\r\n        case FETCH_LOCATIONS_REQUEST:\r\n            return {...state, loading: true}\r\n        case FETCH_LOCATIONS_SUCCESS:\r\n            return {...state, loading: false, data: payload, error:''}\r\n        case FETCH_LOCATIONS_FAILURE:\r\n            return {...state, loading:false, error: payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default locationsReducer","export const weekday = [\r\n\"Sunday\",\r\n\"Monday\",\r\n\"Tuesday\",\r\n\"Wednesday\",\r\n\"Thursday\",\r\n\"Friday\",\r\n\"Saturday\",\r\n]\r\n\r\nexport const themes ={\r\n    light: 'light',\r\n    dark: 'dark'\r\n}","import { themes } from '../constants/general'\r\nimport {\r\n    CHANGE_APP_THEME\r\n}\r\nfrom '../constants/reducer-actions'\r\n\r\nconst initialValues = {\r\n    theme: themes.light\r\n}\r\n\r\nconst appReducer = (state=initialValues, {type, payload}) =>{\r\n    switch(type){\r\n        case CHANGE_APP_THEME:\r\n            return {...state, theme: payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default appReducer","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\nimport favoritesReducer from './reducers/favoritesReducer'\r\nimport homeReducer from './reducers/homeReducer'\r\nimport currentWeatherReducer from './reducers/currentWeatherReducer'\r\nimport forcastReducer from './reducers/forcastReducer'\r\nimport locationsReducer from './reducers/locationsReducer'\r\nimport appReducer from './reducers/appReducer'\r\n\r\nconst createRootReducer = (history) =>combineReducers({\r\n    router: connectRouter(history),\r\n    app: appReducer,\r\n    home: homeReducer,\r\n    favorites: favoritesReducer,\r\n    currentWeather: currentWeatherReducer,\r\n    forcast: forcastReducer,\r\n    locations: locationsReducer\r\n})\r\nexport default createRootReducer\r\n","import { routerMiddleware } from \"connected-react-router\"\r\nimport { createBrowserHistory } from \"history\"\r\nimport { applyMiddleware, createStore } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport createRootReducer from \"./reducers\"\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nexport default function configureStore(preloadedState){\r\n    const store = createStore(\r\n        createRootReducer(history),\r\n        preloadedState,\r\n        composeWithDevTools(\r\n            applyMiddleware(\r\n                routerMiddleware(history),\r\n                thunk\r\n            )\r\n        )\r\n    )\r\n\r\n    return store\r\n}","export const routes ={\r\n    HOME: \"/\",\r\n    FAVORITES: \"/favorites\"\r\n}","import {\r\nUPADTAE_MAIN_LOCATION_TO_VIEW,\r\nADD_TO_ERROR_STACK,\r\nREMOVE_FROM_ERROR_STACK\r\n}\r\nfrom '../constants/reducer-actions'\r\n\r\nexport const updateMainLocationToView = (location) => {\r\n    return { type: UPADTAE_MAIN_LOCATION_TO_VIEW, payload: location }\r\n}\r\n\r\nexport const addToErrorStack = (errorObject) =>{\r\n    return { type: ADD_TO_ERROR_STACK, payload: errorObject}\r\n}\r\n\r\nexport const removeFromErrorStack = (id) =>{\r\n    return { type: REMOVE_FROM_ERROR_STACK, payload: id }\r\n}","// export const apiKey = \"LGugoLfVGSvCt2rtGDuP7oAm38jhBn7N\"\r\nexport const apiKey = \"2F60lQOTqu1hJwzHRybkqr3S0cS1SdtU\"\r\nexport const weatherIamgesUrl = \"https://developer.accuweather.com/sites/default/files/@@-s.png\"\r\nexport const currentWeatherUrl = \"https://dataservice.accuweather.com/currentconditions/v1/\"\r\nexport const forcastUrl = \"https://dataservice.accuweather.com/forecasts/v1/daily/5day/\"\r\nexport const autocompleteUrl = \"https://dataservice.accuweather.com/locations/v1/cities/autocomplete\"\r\nexport const defaultLocation = {key: \"215854\", name:\"Tel Aviv\"}\r\n","import { weatherIamgesUrl } from '../constants/api'\r\n\r\n\r\n/** check if a js object is empty or not according to the validation type*/\r\nexport const objectValidation = (object, validationType=\"or\") => {\r\n    switch(validationType){\r\n        case \"or\":\r\n            return (Object.keys(object).length === 0 ||\r\n            object === undefined || object === null)\r\n        case \"and\":\r\n            return (Object.keys(object).length !== 0 &&\r\n            object !== undefined && object !== null)\r\n        default:\r\n            return false\r\n    }\r\n} \r\n\r\n/** returns the correct url according to the icon number received  from the api */\r\nexport const returnUrlForWeatherIcon = (iconNumber) =>{\r\n    if(iconNumber<10)\r\n        iconNumber = `0${iconNumber}`\r\n    return weatherIamgesUrl.replace(\"@@\", iconNumber)\r\n}","import { apiKey, forcastUrl } from '../constants/api'\r\nimport {\r\n    FETCH_FORCAST_REQUEST,\r\n    FETCH_FORCAST_SUCCESS,\r\n    FETCH_FORCAST_FAILURE\r\n}\r\nfrom '../constants/reducer-actions'\r\nimport { addToErrorStack } from './homeActions'\r\n    \r\nconst fetchForcastRequest = () => {\r\n    return { type: FETCH_FORCAST_REQUEST }\r\n}\r\n\r\nconst fetchForcastSuccess = (data) => {\r\n    return { type: FETCH_FORCAST_SUCCESS, payload: data }\r\n}\r\n\r\nconst fetchForcastFailure = (error) => {\r\n    return { type: FETCH_FORCAST_FAILURE, payload: error }\r\n}\r\n\r\nexport const fetchForcast = (key, metric=false) =>{\r\n    return async (dispatch)=>{\r\n        dispatch(fetchForcastRequest())\r\n        await fetch(`${forcastUrl}${key}?apikey=${apiKey}&metric=${metric}`)\r\n        .then(response=>{\r\n            if(response.status !== 200){\r\n                try{\r\n                    return response.text().then(text=> {throw new Error(text)})\r\n                }\r\n                catch (err){\r\n                    throw err\r\n                }\r\n            }\r\n            return response.json()\r\n        })\r\n        .then(data=>{\r\n            dispatch(fetchForcastSuccess({id:key, forcasts: data.DailyForecasts}))\r\n        })\r\n        .catch(err=>{\r\n            dispatch(addToErrorStack({id: Math.random(), name: \"Home - forcast\", error:err.message}))\r\n            dispatch(fetchForcastFailure(err.message))\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport { updateMainLocationToView } from '../../../actionCreators/homeActions'\r\nimport './LocationCard.css'\r\nimport { routes } from '../../../constants/navigation'\r\nimport { objectValidation } from '../../../actionCreators/generalFunctions'\r\nimport { fetchForcast } from '../../../actionCreators/forcastActions'\r\n\r\n\r\nconst LocationCard = ({location}) =>{\r\n    const dispatch = useDispatch()\r\n    const forcast = useSelector(state=>state.forcast)\r\n    const theme = useSelector(state=>state.app.theme)\r\n    const history = useHistory()\r\n\r\n    const handleClick = () =>{\r\n        dispatch(updateMainLocationToView(location))\r\n\r\n        // if the key is diffrent from the one of forcast in store, fetch the forcast\r\n        if(objectValidation(forcast.data) || forcast.data.id !== location.id)\r\n            dispatch(fetchForcast(location.id, true))\r\n\r\n\r\n        history.push(routes.HOME)\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={`location-card ${theme}`} >\r\n            <Card onClick={handleClick}  bg={theme} variant={theme}>\r\n                <Card.Header as=\"h5\">{location.name}</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>{location.location.WeatherText}</Card.Title>\r\n                    <Card.Text>\r\n                        {location.location.Temperature.Metric.Value} &#8451;\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default LocationCard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Favorites.css'\r\nimport LocationCard from './LocationCard/LocationCard'\r\n\r\n\r\nconst Favorites = () =>{\r\n    const favorites = useSelector(state=>state.favorites.favorites)\r\n    // const f = [...favorites,...favorites,...favorites,...favorites,...favorites,...favorites,\r\n    //     ...favorites,...favorites,...favorites,...favorites,...favorites,...favorites,\r\n    //     ...favorites,...favorites,...favorites,...favorites,...favorites,...favorites,]\r\n\r\n    return(\r\n        <div className=\"favorites-container\">\r\n            { favorites.length !== 0?\r\n                <div className=\"favorites-cards-container\">\r\n                    {\r\n                        favorites.map(location=>{\r\n                            return(\r\n                                <LocationCard location={location} key={Math.random()}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                :\r\n                <div className=\"no-locations-text\">\r\n                    No locations have been added go to the home page to add locations now !\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Favorites\r\n","import { apiKey, autocompleteUrl } from '../constants/api'\r\nimport {\r\n    FETCH_LOCATIONS_REQUEST,\r\n    FETCH_LOCATIONS_SUCCESS,\r\n    FETCH_LOCATIONS_FAILURE\r\n}\r\nfrom '../constants/reducer-actions'\r\n    \r\nconst fetchLocationsRequest = () => {\r\n    return { type: FETCH_LOCATIONS_REQUEST }\r\n}\r\n\r\nconst fetchLocationsSuccess = (data) => {\r\n    return { type: FETCH_LOCATIONS_SUCCESS, payload: data }\r\n}\r\n\r\nconst fetchLocationsFailure = (error) => {\r\n    return { type: FETCH_LOCATIONS_FAILURE, payload: error }\r\n}\r\n\r\nexport const fetchLocations = (searchString) =>{\r\n    return async (dispatch)=>{\r\n        dispatch(fetchLocationsRequest())\r\n        await fetch(`${autocompleteUrl}?apikey=${apiKey}&q=${searchString}`)\r\n        .then(response=>{\r\n            if(response.status !== 200){\r\n                try{\r\n                    return response.text().then(text=> {throw new Error(text)})\r\n                }\r\n                catch (err){\r\n                    throw err\r\n                }\r\n            }\r\n            return response.json()\r\n        })\r\n        .then(data=>{\r\n            dispatch(fetchLocationsSuccess(data))\r\n        })\r\n        .catch(err=>{\r\n            dispatch(fetchLocationsFailure(err.message))\r\n        })\r\n    }\r\n}","import { apiKey, currentWeatherUrl } from '../constants/api'\r\nimport {\r\n    FETCH_CURRENT_WEATHER_REQUEST,\r\n    FETCH_CURRENT_WEATHER_SUCCESS,\r\n    FETCH_CURRENT_WEATHER_FAILURE\r\n}\r\nfrom '../constants/reducer-actions'\r\nimport { addToErrorStack, updateMainLocationToView } from './homeActions'\r\n    \r\nconst fetchCurrentWeatherRequest = () => {\r\n    return { type: FETCH_CURRENT_WEATHER_REQUEST }\r\n}\r\n\r\nconst fetchCurrentWeatherSuccess = (data) => {\r\n    return { type: FETCH_CURRENT_WEATHER_SUCCESS, payload: data }\r\n}\r\n\r\nconst fetchCurrentWeatherFailure = (error) => {\r\n    return { type: FETCH_CURRENT_WEATHER_FAILURE, payload: error }\r\n}\r\n\r\nexport const fetchCurrentWeather = (key, name) =>{\r\n    return async (dispatch)=>{\r\n        dispatch(fetchCurrentWeatherRequest())\r\n        await fetch(`${currentWeatherUrl}${key}?apikey=${apiKey}`)\r\n        .then(response=>{\r\n            if(response.status !== 200){\r\n                try{\r\n                    return response.text().then(text=> {throw new Error(text)})\r\n                }\r\n                catch (err){\r\n                    throw err\r\n                }\r\n            }\r\n            return response.json()\r\n        })\r\n        .then(data=>{\r\n            dispatch(fetchCurrentWeatherSuccess(data))\r\n            dispatch(updateMainLocationToView({id:key, name: name, location: data[0]}))\r\n        })\r\n        .catch(err=>{\r\n            dispatch(addToErrorStack({id:Math.random(), name:\"Home - weather details\", error: err.message}))\r\n            dispatch(fetchCurrentWeatherFailure(err.message))\r\n        })\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport './SearchBar.css'\r\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchLocations } from '../../../actionCreators/locationsActions'\r\nimport { fetchCurrentWeather } from '../../../actionCreators/currentWeatherActions'\r\nimport { fetchForcast } from '../../../actionCreators/forcastActions'\r\nimport { objectValidation } from '../../../actionCreators/generalFunctions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSearch} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst SearchBar = () =>{\r\n    const locations = useSelector(state=>state.locations)\r\n    const currentLocation = useSelector(state=>state.home.locationToView)\r\n    const theme = useSelector(state=>state.app.theme)\r\n    const dispatch = useDispatch()\r\n    const [selectedCity, setSelectedCity] = useState([])\r\n\r\n    useEffect(()=>{\r\n        if(selectedCity.length !== 0){\r\n            if(objectValidation(currentLocation) || currentLocation.id !== selectedCity[0].Key){\r\n                dispatch(fetchCurrentWeather(selectedCity[0].Key, selectedCity[0].LocalizedName))\r\n                dispatch(fetchForcast(selectedCity[0].Key, true))\r\n            }\r\n        }\r\n    },[selectedCity])\r\n\r\n\r\n    return(\r\n        <div className=\"main-searchbar-container\">\r\n            <Container>\r\n                { locations.error && <small className=\"search-error-message\" >{locations.error}</small>}\r\n                <div className=\"container-for-adding-icon\">\r\n                    <AsyncTypeahead \r\n                        id=\"city-serch-autocomplete\"\r\n                        className={theme}\r\n                        isLoading={locations.loading}\r\n                        labelKey={option => `${option.Country.LocalizedName} - ${option.LocalizedName}`}\r\n                        onSearch={(query) => {\r\n                            dispatch(fetchLocations(query))\r\n                        }}\r\n                        options={locations.data}\r\n                        onChange={(selected)=>{setSelectedCity(selected)}}\r\n                        selected={selectedCity}\r\n                        placeholder=\"Search for a city\"\r\n                        />\r\n                <FontAwesomeIcon icon={faSearch} size=\"lg\"  flip=\"horizontal\" style={{position:'absolute', top:'23%', right:'5%'}}/>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default SearchBar","import { Card } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { weekday } from '../../../constants/general'\r\nimport './MiniForcastCard.css'\r\n\r\nconst getDayByDateTime = (dateTime) =>{\r\n    const date = new Date(dateTime)\r\n    return weekday[date.getDay()]\r\n}\r\n\r\nconst MiniForcastCard = ({forcast}) =>{\r\n    const theme = useSelector(state=>state.app.theme)\r\n\r\n    return(\r\n        <div className=\"mini-forcast-card\"> \r\n            <Card bg={theme} variant={theme}>\r\n                <Card.Body>\r\n                    <Card.Title>{getDayByDateTime(forcast.Date)}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{forcast.Day.IconPhrase}</Card.Subtitle>\r\n                    <Card.Text>\r\n                        {forcast.Temperature.Minimum.Value} &#8451;\r\n                            - \r\n                            {forcast.Temperature.Maximum.Value} &#8451;\r\n                        </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default MiniForcastCard","import React, { useEffect, useState } from 'react'\r\nimport './InformationCard.css'\r\nimport { MdStar, MdStarOutline } from \"react-icons/md\";\r\nimport MiniForcastCard from '../MIniForcastCard/MiniForcastCard';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { addToFavorites, removeFromFavorites } from '../../../actionCreators/favoritesActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { OverlayTrigger, Spinner, Tooltip } from 'react-bootstrap';\r\nimport { objectValidation, returnUrlForWeatherIcon } from '../../../actionCreators/generalFunctions';\r\n\r\n\r\nconst InformationCard = () =>{\r\n    const favorites = useSelector(state=>state.favorites.favorites)\r\n    const currentLocation = useSelector(state=>state.home.locationToView)\r\n    const currentWeather = useSelector(state=>state.currentWeather)\r\n    const forcast = useSelector(state=>state.forcast)\r\n    const dispatch = useDispatch()\r\n    const [isFavorite, setIsFavorite] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        favorites.forEach(location => {\r\n            if(location.id === currentLocation.id){\r\n                setIsFavorite(true)\r\n            }\r\n        })\r\n        return(()=>{setIsFavorite(false)})\r\n    },[currentLocation])\r\n\r\n    const handleAddToFavorites = () =>{\r\n        dispatch(addToFavorites(currentLocation))\r\n        setIsFavorite(true)\r\n    }\r\n    \r\n    const handleRemoveFromFavorites = () =>{\r\n        dispatch(removeFromFavorites(currentLocation.id))\r\n        setIsFavorite(false)\r\n    }\r\n\r\n    return(\r\n        <div className=\"information-card-container\">\r\n            <div className=\"information-card\">\r\n                {\r\n                    currentWeather.loading?\r\n                    <div className=\"top-of-information-card\">\r\n                        <Spinner className=\"current-weather-spinner\" animation=\"border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>\r\n\r\n                    : currentWeather.error?\r\n                    <div className=\"top-of-information-card\">\r\n                        <div>{currentWeather.error}</div>\r\n                    </div>\r\n\r\n                    :objectValidation(currentLocation)?\r\n                    <div></div>\r\n                    :\r\n                    <>\r\n                    <div className=\"top-of-information-card\">\r\n                        <div className=\"today-city-information\">\r\n                            <div className=\"today-city-name-and-temperature\">\r\n                                <div>{currentLocation.name}</div>\r\n                                <div>{currentLocation.location.Temperature.Metric.Value} &#8451;</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"middle-of-information-card\">\r\n                            <div className=\"weather-icon-container\">\r\n                                <img alt=\"\" src={returnUrlForWeatherIcon(currentLocation.location.WeatherIcon)}/>\r\n                            </div>\r\n                            <span className=\"current-weather-text\">{currentLocation.location.WeatherText}</span>\r\n                        </div>\r\n                        <OverlayTrigger\r\n                            placement='top'\r\n                            overlay={\r\n                            <Tooltip>\r\n                                {isFavorite? \"Remove from favorites\": \"Add to favorites\"}\r\n                            </Tooltip>\r\n                            }\r\n                        >\r\n                            <div className=\"add-to-favorites-container\">\r\n                                    <IconContext.Provider value={{className: 'favorites-icon'}}>\r\n                                        {!isFavorite && <MdStarOutline onClick={handleAddToFavorites}/> }\r\n                                        {isFavorite &&  <MdStar onClick={handleRemoveFromFavorites} />}\r\n                                    </IconContext.Provider> \r\n                            </div>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n\r\n                    \r\n                    </>\r\n                }\r\n\r\n\r\n                    \r\n                <div className=\"bottom-of-information-card\">\r\n                    <div className=\"mini-forcast-cards-container\">\r\n                        {\r\n                            forcast.loading?\r\n                            <Spinner animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </Spinner>\r\n        \r\n                            :forcast.error?\r\n                            <div>{forcast.error}</div>\r\n\r\n                            :\r\n                            objectValidation(forcast.data, \"and\") &&\r\n                             forcast.data.forcasts.map(day=>{\r\n                                return(\r\n                                    <MiniForcastCard forcast={day} key={Math.random()}/>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default InformationCard","import {\r\n    ADD_TO_FAVORITES,\r\n    REMOVE_FROM_FAVORITES\r\n    }\r\nfrom '../constants/reducer-actions'\r\n\r\nexport const addToFavorites = (location) => {\r\n    return { type: ADD_TO_FAVORITES, payload: location}\r\n}\r\n\r\nexport const removeFromFavorites = (id) => {\r\n    return { type: REMOVE_FROM_FAVORITES, payload: id}\r\n}","import React from 'react'\r\nimport { Toast } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeFromErrorStack } from '../../actionCreators/homeActions'\r\n\r\nconst ErrorToast = ({id, name, error}) =>{\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <Toast onClose={()=>{dispatch(removeFromErrorStack(id))}} delay={3000} autohide bg=\"danger\">\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{name}</strong>\r\n            </Toast.Header>\r\n            <Toast.Body  className=\"text-white\">{error}</Toast.Body>\r\n        </Toast>\r\n    )\r\n}\r\n\r\nexport default ErrorToast","import React, { useEffect } from 'react'\r\nimport SearchBar from './SearchBar/SearchBar'\r\nimport './Home.css'\r\nimport InformationCard from './InformarionCard/InformationCrad'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchCurrentWeather } from '../../actionCreators/currentWeatherActions'\r\nimport { fetchForcast } from '../../actionCreators/forcastActions'\r\nimport { objectValidation } from '../../actionCreators/generalFunctions'\r\nimport { defaultLocation } from '../../constants/api'\r\nimport ErrorToast from '../ErrorToast/ErrorToast'\r\nimport { ToastContainer } from 'react-bootstrap'\r\n\r\n\r\nconst Home = () =>{\r\n    const dispatch = useDispatch()\r\n    const currentWeather = useSelector(state=>state.currentWeather)\r\n    const forcast = useSelector(state=>state.forcast)\r\n    const errorStack = useSelector(state=>state.home.errorStack)\r\n\r\n    useEffect(()=>{\r\n        if(currentWeather.data.length === 0)\r\n            dispatch(fetchCurrentWeather(defaultLocation.key, defaultLocation.name))\r\n        \r\n        if( objectValidation(forcast.data))\r\n            dispatch(fetchForcast(defaultLocation.key, true))\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            <ToastContainer  position='top-center'>\r\n                    {\r\n                        errorStack.map(error=>{\r\n                            return(\r\n                                <ErrorToast key={error.id} id={error.id} name={error.name} error={error.error} />\r\n                            )\r\n                        })\r\n                    }\r\n            </ToastContainer>\r\n            <div className=\"search-and-info-container\">\r\n                <SearchBar/>\r\n                <div className=\"home-information-container\">\r\n                    <InformationCard />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Home","import {\r\n    CHANGE_APP_THEME\r\n}\r\nfrom '../constants/reducer-actions'\r\n\r\nexport const changeAppTheme = (theme) =>{\r\n    return { type: CHANGE_APP_THEME, payload: theme}\r\n}","import React, { useRef } from 'react'\r\nimport {Navbar, Container, Nav, Form, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { routes } from '../../constants/navigation'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCloudSun, faSun, faMoon} from '@fortawesome/free-solid-svg-icons'\r\nimport './NavBar.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeAppTheme } from '../../actionCreators/appActions'\r\nimport { themes } from '../../constants/general'\r\n\r\n\r\nconst NavBar = () =>{\r\n    const theme = useSelector(state=>state.app.theme)\r\n    const dispatch = useDispatch()\r\n    const themeSwitchRef = useRef(false)\r\n\r\n    const handleThemeSwitch = () =>{\r\n        if(themeSwitchRef.current.checked)\r\n            dispatch(changeAppTheme(themes.dark))\r\n        else\r\n            dispatch(changeAppTheme(themes.light))\r\n    }\r\n\r\n    return(\r\n        <Navbar id=\"navbar\" bg={theme} variant={theme}>\r\n            <Container>\r\n                <Col>\r\n                <Navbar.Brand as={Link} to={routes.HOME}>\r\n                    <FontAwesomeIcon icon={faCloudSun} size=\"lg\" style={{marginRight: 10}}/>\r\n                    Weather App\r\n                </Navbar.Brand>\r\n                </Col>\r\n\r\n                {!themeSwitchRef.current.checked && \r\n                <FontAwesomeIcon icon={faSun} size=\"lg\" style={{marginRight: 10}}/>}\r\n                {themeSwitchRef.current.checked && \r\n                <FontAwesomeIcon icon={faMoon} size=\"lg\" style={{marginRight: 10, color: '#fff'}}/>}\r\n                <Form.Check ref={themeSwitchRef} className=\"theme-switch\" type=\"switch\" onChange={handleThemeSwitch}/>\r\n\r\n                <Nav>\r\n                    <Nav.Link as={Link} to={routes.HOME} >Home</Nav.Link>\r\n                    <Nav.Link as={Link} to={routes.FAVORITES} >Favorites</Nav.Link>\r\n                </Nav>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport { themes } from '../../constants/general'\r\nimport {routes} from '../../constants/navigation'\r\nimport Favorites from '../Favorites/Favorites'\r\nimport Home from '../Home/Home'\r\nimport NavBar from '../NavBar/NavBar'\r\nimport './App.css'\r\n\r\n\r\nconst App = () =>{\r\n    const theme = useSelector(state=>state.app.theme)\r\n\r\n    useEffect(()=>{\r\n        switch(theme){\r\n            case themes.dark:\r\n                document.body.className = \"body-dark\"\r\n                break\r\n            case themes.light:\r\n                document.body.className = \"body-light\"\r\n                break\r\n            default:\r\n                return\r\n        }\r\n    },[theme])\r\n\r\n    return(\r\n        <div className=\"app-container\">\r\n            <NavBar />\r\n            <Switch>\r\n                <Route exact path={routes.HOME} component={Home}/>\r\n                <Route path={routes.FAVORITES} component={Favorites}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default App\r\n","import { ConnectedRouter } from 'connected-react-router';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './configureStore';\r\nimport { history } from './configureStore';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport App from './components/App/App';\r\nimport './index.css'\r\n\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        <Switch>\r\n          <Route path=\"/\" component={App} />\r\n        </Switch>\r\n      </ConnectedRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}